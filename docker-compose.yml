version: "3.3"

volumes:
    grafana_data: {}

services:
    traefik:
        image: "traefik:2.3"
        container_name: "traefik"
        restart: always
        command:
            - "--providers.docker=true"
            - "--providers.docker.exposedbydefault=false"
            - "--entrypoints.web.address=:80"
            - "--entrypoints.websecure.address=:443"
            - "--log.level=DEBUG" # DEBUG, PANIC, FATAL, ERROR, WARN, INFO
            - "--log.filePath=/logs/traefik.log"
            - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
            - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
            # - "--certificatesresolvers.myresolver.acme.email=test@example.com"
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - "/var/run/docker.sock:/var/run/docker.sock:ro"
            - "./logs/:/logs/"
            - "./letsencrypt:/letsencrypt"

    frontend:
        image: ghcr.io/christianwaldmann/bookmarks-frontend:0.0.2
        container_name: frontend
        environment:
            - BOOKMARKS_BACKEND_BASE_URL=${BOOKMARKS_BACKEND_BASE_URL}
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.frontend.rule=Host(`${BOOKMARKS_FRONTEND_DOMAIN}`)"
            - "traefik.http.routers.frontend.entrypoints=websecure"
            - "traefik.http.routers.frontend.tls.certresolver=myresolver"
        restart: always

    backend:
        image: ghcr.io/christianwaldmann/bookmarks-backend:0.0.5
        container_name: backend
        restart: always
        volumes:
            - ./database:/database
        environment:
            - BOOKMARKS_SECRET_KEY=${BOOKMARKS_SECRET_KEY}
            - BOOKMARKS_BACKEND_DOMAIN=${BOOKMARKS_BACKEND_DOMAIN}
            - BOOKMARKS_FRONTEND_BASE_URL=${BOOKMARKS_FRONTEND_BASE_URL}
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.backend.rule=Host(`${BOOKMARKS_BACKEND_DOMAIN}`)"
            - "traefik.http.routers.backend.entrypoints=websecure"
            - "traefik.http.routers.backend.tls.certresolver=myresolver"

    uptime-kuma:
        image: louislam/uptime-kuma:1
        container_name: uptime_kuma
        restart: always
        volumes:
            - ./uptime-kuma-data:/app/data
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.uptime_kuma.rule=Host(`${BOOKMARKS_STATUS_DOMAIN}`)"
            - "traefik.http.routers.uptime_kuma.entrypoints=websecure"
            - "traefik.http.routers.uptime_kuma.tls.certresolver=myresolver"

    grafana:
        image: grafana/grafana-oss:10.0.2
        container_name: grafana
        volumes:
            - grafana_data:/var/lib/grafana
        restart: always
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.grafana.rule=Host(`${BOOKMARKS_GRAFANA_DOMAIN}`)"
            - "traefik.http.routers.grafana.entrypoints=websecure"
            - "traefik.http.routers.grafana.tls.certresolver=myresolver"
            - "traefik.http.services.grafana.loadbalancer.server.port=3000"

    prometheus:
        image: prom/prometheus:v2.45.0
        container_name: prometheus
        restart: always
        volumes:
            - ./prometheus.yml:/etc/prometheus/prometheus.yml
        command:
            - "--config.file=/etc/prometheus/prometheus.yml"

    node-exporter:
        image: prom/node-exporter:v1.6.0
        container_name: node_exporter
        restart: always
        volumes:
            - /proc:/host/proc:ro
            - /sys:/host/sys:ro
            - /:/rootfs:ro
        command:
            - "--path.procfs=/host/proc"
            - "--path.rootfs=/rootfs"
            - "--path.sysfs=/host/sys"
            - "--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)"
